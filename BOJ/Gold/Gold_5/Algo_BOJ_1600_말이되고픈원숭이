import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class Algo_BOJ_1600_말이되고픈원숭이 {
	private static int K, W, H, ans = -1;
	private static int[][] map;
	private static boolean[][][] visited;
	// 00 01 02 03 04
	// 10 11 12 13 14
	// 20 21 22 23 24
	// 30 31 32 33 34
	// 40 41 42 43 44
	private static int[] dr = {-1, 1, 0, 0, -2, -1, -2, -1,  1, 2,  1, 2};
	private static int[] dc = {0, 0, -1, 1, -1, -2,  1,  2, -2, -1, 2, 1};
	
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		K = Integer.parseInt(br.readLine());
		StringTokenizer st = new StringTokenizer(br.readLine(), " ");
		W = Integer.parseInt(st.nextToken());
		H = Integer.parseInt(st.nextToken());
		map = new int[H][W];
		visited = new boolean[H][W][K+1];
		
		for (int i = 0; i < H; i++) {
			st = new StringTokenizer(br.readLine(), " ");
			for (int j = 0; j < W; j++) {
				map[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		
		Queue<Loc> q = new LinkedList<Loc>();
		visited[0][0][0] = true;
		q.offer(new Loc(0, 0, 0, 0));
		while (!q.isEmpty()) {
			Loc now = q.poll();
			
			// 도착지에 도달
			if (now.x == H-1 && now.y == W-1) {
				ans = now.dist;
				break;
			}
			
			// 말처럼 뛸 수 있는지 확인
			int animal = now.jump >= K ? 4 : 12;
			// 이동
			for (int d = 0; d < animal; d++) {
				int nr = now.x + dr[d];
				int nc = now.y + dc[d];
				
				if (0 <= nr && nr < H && 0 <= nc && nc < W && map[nr][nc] == 0) {
					if (d < 4) {
						if (!visited[nr][nc][now.jump]) {
							visited[nr][nc][now.jump] = true;
							q.offer(new Loc(nr, nc, now.dist + 1, now.jump));
						}
					} else {
						if (!visited[nr][nc][now.jump + 1]) {
							visited[nr][nc][now.jump + 1] = true;
							q.offer(new Loc(nr, nc, now.dist+1, now.jump + 1));
						}
					}
				}
			}
		}	// end of while loop
		
		System.out.println(ans);
	}	// end of main
	
	static class Loc {
		int x, y, dist, jump;

		public Loc(int x, int y, int dist, int jump) {
			this.x = x;
			this.y = y;
			this.dist = dist;
			this.jump = jump;
		}
	}
}	// end of class
